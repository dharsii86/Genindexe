-- MySQL Script generated by MySQL Workbench
-- 05/16/16 12:22:05
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema genindexe
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `genindexe` ;

-- -----------------------------------------------------
-- Schema genindexe
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `genindexe` DEFAULT CHARACTER SET utf8 ;
USE `genindexe` ;

-- -----------------------------------------------------
-- Table `genindexe`.`analysis`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`analysis` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`analysis` (
  `Analysis_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Analysis_Name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`customer` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`customer` (
  `Customer_Login` VARCHAR(45) NOT NULL,
  `Customer_Name` VARCHAR(45) NOT NULL,
  `Customer_Town` VARCHAR(45) NOT NULL,
  `Customer_Password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Customer_Login`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`order` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`order` (
  `Order_Id` INT NOT NULL AUTO_INCREMENT,
  `Order_Status` VARCHAR(45) NOT NULL,
  `Analysis_Name` VARCHAR(45) NOT NULL,
  `Customer_Login` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Order_Id`),
  INDEX `fk_order_analysis_idx` (`Analysis_Name` ASC),
  INDEX `fk_order_customer_login_idx` (`Customer_Login` ASC),
  CONSTRAINT `fk_order_analysis`
    FOREIGN KEY (`Analysis_Name`)
    REFERENCES `genindexe`.`analysis` (`Analysis_Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_order_customer_login`
    FOREIGN KEY (`Customer_Login`)
    REFERENCES `genindexe`.`customer` (`Customer_Login`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`category` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`category` (
  `Category_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Category_Name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`specie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`specie` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`specie` (
  `Specie_Name` VARCHAR(45) NOT NULL,
  `Category_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Specie_Name`),
  INDEX `fk_specie_category_idx` (`Category_Name` ASC),
  CONSTRAINT `fk_specie_category`
    FOREIGN KEY (`Category_Name`)
    REFERENCES `genindexe`.`category` (`Category_Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`samplestate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`samplestate` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`samplestate` (
  `idState` INT NOT NULL AUTO_INCREMENT,
  `State_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idState`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`sample`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`sample` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`sample` (
  `Sample_Id` INT NOT NULL AUTO_INCREMENT,
  `Specie_Name` VARCHAR(45) NOT NULL,
  `Order_Id` INT NOT NULL,
  `result` VARCHAR(45) NULL,
  `state` INT NOT NULL,
  PRIMARY KEY (`Sample_Id`),
  INDEX `fk_sample_specie_idx` (`Specie_Name` ASC),
  INDEX `fk_sample_order_idx` (`Order_Id` ASC),
  INDEX `fk_sample_state_idx` (`state` ASC),
  CONSTRAINT `fk_sample_specie`
    FOREIGN KEY (`Specie_Name`)
    REFERENCES `genindexe`.`specie` (`Specie_Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_sample_order`
    FOREIGN KEY (`Order_Id`)
    REFERENCES `genindexe`.`order` (`Order_Id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_sample_state`
    FOREIGN KEY (`state`)
    REFERENCES `genindexe`.`sampleState` (`idState`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`relevant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`relevant` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`relevant` (
  `Specie_Name` VARCHAR(45) NOT NULL,
  `Analysis_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Specie_Name`, `Analysis_Name`),
  INDEX `fk_relevant_analysis_idx` (`Analysis_Name` ASC),
  CONSTRAINT `fk_relevant_specie`
    FOREIGN KEY (`Specie_Name`)
    REFERENCES `genindexe`.`specie` (`Specie_Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_relevant_analysis`
    FOREIGN KEY (`Analysis_Name`)
    REFERENCES `genindexe`.`analysis` (`Analysis_Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`status` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`status` (
  `Status_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Status_Name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`user` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`user` (
  `User_Login` VARCHAR(45) NOT NULL,
  `User_Mail` VARCHAR(45) NOT NULL,
  `User_Name` VARCHAR(45) NOT NULL,
  `User_LastName` VARCHAR(45) NOT NULL,
  `User_Password` VARCHAR(45) NOT NULL,
  `Status_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`User_Login`),
  INDEX `fk_user_status_idx` (`Status_Name` ASC),
  CONSTRAINT `fk_user_status`
    FOREIGN KEY (`Status_Name`)
    REFERENCES `genindexe`.`status` (`Status_Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`modifySpecie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`modifySpecie` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`modifySpecie` (
  `Specie_Name` VARCHAR(45) NOT NULL,
  `User_Login` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Specie_Name`, `User_Login`),
  INDEX `fk_modifyspecie_user_idx` (`User_Login` ASC),
  CONSTRAINT `fk_modifyspecie_specie`
    FOREIGN KEY (`Specie_Name`)
    REFERENCES `genindexe`.`specie` (`Specie_Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_modifyspecie_user`
    FOREIGN KEY (`User_Login`)
    REFERENCES `genindexe`.`user` (`User_Login`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`modifyCategory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`modifyCategory` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`modifyCategory` (
  `Category_Name` VARCHAR(45) NOT NULL,
  `User_Login` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Category_Name`, `User_Login`),
  INDEX `fk_modifyspecie_user_idx` (`User_Login` ASC),
  CONSTRAINT `fk_modifycategory_category`
    FOREIGN KEY (`Category_Name`)
    REFERENCES `genindexe`.`category` (`Category_Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_modifycategory_user`
    FOREIGN KEY (`User_Login`)
    REFERENCES `genindexe`.`user` (`User_Login`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genindexe`.`modifyOrder`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genindexe`.`modifyOrder` ;

CREATE TABLE IF NOT EXISTS `genindexe`.`modifyOrder` (
  `Order_Id` INT NOT NULL,
  `User_Login` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Order_Id`, `User_Login`),
  INDEX `fk_modifyspecie_user_idx` (`User_Login` ASC),
  CONSTRAINT `fk_modifyorder_order`
    FOREIGN KEY (`Order_Id`)
    REFERENCES `genindexe`.`order` (`Order_Id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_modifyorder_user`
    FOREIGN KEY (`User_Login`)
    REFERENCES `genindexe`.`user` (`User_Login`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
